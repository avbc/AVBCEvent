/*!
 * @author Jonathon Hibbard
 * A very, very simple Event Queue
 * https://github.com/avbc/AVBCEvent/blob/master/AVBCEvent.min.js
 *
 * The MIT License (MIT)
 * Copyright (c) 2015 Jonathon Hibbard
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
(function(){"use strict";function e(n){return n instanceof e?n:this instanceof e?void(this._AVBCEvent=n):new e}var e,n=this,t={wasTriggered:!1,callbackArgs:[]};n.AVBCEvent=e,"undefined"==typeof n.AVBCEventQueue&&(n.AVBCEventQueue={}),"undefined"==typeof n.AVBCEventProcessed&&(n.AVBCEventProcessed={}),e.trigger=function(e){var t,u,s,c=n.AVBCEventQueue[e];if("undefined"!=typeof c){for(t=Array.prototype.slice.call(arguments,1),u=0;u<c.length;u++)s=c[u],s.callback(t.slice()),s.dequeueAfter&&c.splice(u,1);n.AVBCEventProcessed[e]={wasTriggered:!0,callbackArgs:t}}},e.on=function(e,u,s){"undefined"==typeof n.AVBCEventQueue[e]&&(n.AVBCEventQueue[e]=[]),"undefined"==typeof n.AVBCEventProcessed[e]&&(n.AVBCEventProcessed[e]=Object.create(t)),AVBCEventProcessed[e].wasTriggered&&(u(n.AVBCEventProcessed[e].callbackArgs.slice()),s)||n.AVBCEventQueue[e].push({callback:u,dequeueAfter:s})},e.dequeue=function(e){"undefined"!=typeof n.AVBCEventQueue[e]&&delete n.AVBCEventQueue[e],"undefined"!=typeof n.AVBCEventProcessed[e]&&delete n.AVBCEventProcessed[e]},e.drainPool=function(){n.AVBCEventQueue=[],n.AVBCEventProcessed=[]}}).call(this);
